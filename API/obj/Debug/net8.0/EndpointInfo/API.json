{
  "openapi": "3.0.4",
  "info": {
    "title": "Solicitud de Proyecto",
    "version": "1.0"
  },
  "paths": {
    "/api/ApprovalStatus": {
      "get": {
        "tags": [
          "Information"
        ],
        "summary": "Listado de estados para una solicitud de proyectos y pasos de aprobación",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Area": {
      "get": {
        "tags": [
          "Information"
        ],
        "summary": "Listado de áreas",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ProjectType": {
      "get": {
        "tags": [
          "Information"
        ],
        "summary": "Listado de tipos de proyectos",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Role": {
      "get": {
        "tags": [
          "Information"
        ],
        "summary": "Listado de roles de usuario",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "Information"
        ],
        "summary": "Listado de usuarios",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Obtiene el listado de proyectos con filtros",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Filtro por título del proyecto",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filtro por ID del estado del proyecto",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "applicant",
            "in": "query",
            "description": "Filtro por ID del solicitante",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "approvalUser",
            "in": "query",
            "description": "Filtro por ID del usuario aprobador",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectProposalDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Crea una nueva propuesta de proyecto",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectProposalRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectProposalRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectProposalRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectProposalCreateResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/Project/{id}": {
      "patch": {
        "tags": [
          "Project"
        ],
        "summary": "Modificar un proyecto existente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID único del proyecto",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Datos de actualización del proyecto",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdate"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Proyecto actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectProposalCreateResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Si el proyecto no existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Si los datos de actualización son inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Si el proyecto no puede ser modificado en su estado actual",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Ver el detalle del proyecto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID único del proyecto",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna el detalle del proyecto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectProposalCreateResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Si el proyecto no existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Si hay un error en la solicitud",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/Project/{id}/decision": {
      "patch": {
        "tags": [
          "Project"
        ],
        "summary": "Aprobar, rechazar u observar un proyecto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DecisionStepDto"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DecisionStepDto"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DecisionStepDto"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectProposalCreateResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AreaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecisionStepDto": {
        "required": [
          "id",
          "observation",
          "status",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "maximum": 4,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "observation": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProjectProposalCreateResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "area": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AreaDto"
              }
            ],
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusDto"
              }
            ],
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeDto"
              }
            ],
            "nullable": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ],
            "nullable": true
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectProposalDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "area": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectProposalRequest": {
        "required": [
          "amount",
          "description",
          "duration",
          "title",
          "user"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 200,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 10,
            "type": "string"
          },
          "amount": {
            "maximum": 10000000,
            "minimum": 0,01,
            "type": "number",
            "format": "double"
          },
          "duration": {
            "maximum": 3650,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "area": {
            "maximum": 4,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "maximum": 4,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "user": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProjectUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "duration": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StepDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "stepOrder": {
            "type": "integer",
            "format": "int32"
          },
          "decisionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "observations": {
            "type": "string",
            "nullable": true
          },
          "approverUser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ],
            "nullable": true
          },
          "approverRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}